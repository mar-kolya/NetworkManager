From: Nikolay Martynov <mar.kolya@gmail.com>
Date: Mon, 22 May 2017 22:24:44 -0400
Subject: nmtui: always create ethernet settings for VLAN.

Ethernet settings for VLAN are always created later in settings
normalization. We might as well always created them.

This fixes a user visible problem: currently if user specifies cloned
mac when connection is created this value doesn't get saved. User has
to go, edit saved connection to add it again.

Signed-off-by: Nikolay Martynov <mar.kolya@gmail.com>
---
 clients/tui/nmt-page-vlan.c | 20 ++------------------
 1 file changed, 2 insertions(+), 18 deletions(-)

diff --git a/clients/tui/nmt-page-vlan.c b/clients/tui/nmt-page-vlan.c
index 9cd6542..5d8f48b 100644
--- a/clients/tui/nmt-page-vlan.c
+++ b/clients/tui/nmt-page-vlan.c
@@ -35,7 +35,6 @@ G_DEFINE_TYPE (NmtPageVlan, nmt_page_vlan, NMT_TYPE_EDITOR_PAGE_DEVICE)
 #define NMT_PAGE_VLAN_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), NMT_TYPE_PAGE_VLAN, NmtPageVlanPrivate))
 
 typedef struct {
-	NMSettingWired *s_wired;
 
 } NmtPageVlanPrivate;
 
@@ -83,13 +82,9 @@ nmt_page_vlan_constructed (GObject *object)
 	}
 	s_wired = nm_connection_get_setting_wired (conn);
 	if (!s_wired) {
-		/* It makes things simpler if we always have a NMSettingWired;
-		 * we'll hold a ref on one, and add it to and remove it from
-		 * the connection as needed.
-		 */
-		s_wired = NM_SETTING_WIRED (nm_setting_wired_new ());
+		nm_connection_add_setting (conn, nm_setting_wired_new ());
+		s_wired = nm_connection_get_setting_vlan (conn);
 	}
-	priv->s_wired = g_object_ref_sink (s_wired);
 
 	section = nmt_editor_section_new (_("VLAN"), NULL, TRUE);
 	grid = nmt_editor_section_get_body (section);
@@ -133,16 +128,6 @@ nmt_page_vlan_constructed (GObject *object)
 }
 
 static void
-nmt_page_vlan_finalize (GObject *object)
-{
-	NmtPageVlanPrivate *priv = NMT_PAGE_VLAN_GET_PRIVATE (object);
-
-	g_clear_object (&priv->s_wired);
-
-	G_OBJECT_CLASS (nmt_page_vlan_parent_class)->finalize (object);
-}
-
-static void
 nmt_page_vlan_class_init (NmtPageVlanClass *vlan_class)
 {
 	GObjectClass *object_class = G_OBJECT_CLASS (vlan_class);
@@ -151,5 +136,4 @@ nmt_page_vlan_class_init (NmtPageVlanClass *vlan_class)
 
 	/* virtual methods */
 	object_class->constructed = nmt_page_vlan_constructed;
-	object_class->finalize    = nmt_page_vlan_finalize;
 }
